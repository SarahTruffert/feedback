// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using FDB.Mod;

namespace FDB.DataContext
{
    public partial class FDBContext : DbContext
    {
        public FDBContext()
        {
        }

        public FDBContext(DbContextOptions<FDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ClientsDto> ClientsDto { get; set; }
        public virtual DbSet<CommentsDto> CommentsDto { get; set; }
        public virtual DbSet<PublicationsDto> PublicationDto { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity< ClientsDto >( b =>
            {
               
            });

            modelBuilder.Entity<ClientsDto>(entity =>

            {
            //   entity.Property<Guid>("User_Id")
            //      .HasColumnType("uniqueidentifier");
            //
            //   entity.Property<string>("Nom")
            //       .IsRequired()
            //       .HasColumnType("nvarchar(50)");
            //
            //   entity.Property<string>("Prenom")
            //         .IsRequired()
            //         .HasColumnType("nvarchar(50)");
            //

                entity.ToTable("Clients_T");
                entity.HasKey(e => e.User_Id);
                entity.Property(e => e.User_Id).HasDefaultValueSql("(newid())");
                entity.Property(e => e.User_Id).ValueGeneratedNever();
                entity.Property(e => e.Nom)
                    .IsRequired()
                    .HasMaxLength(50);
                entity.Property(e => e.Prenom)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<CommentsDto>(entity =>
            {
                entity.ToTable("Comments_T");
                entity.HasKey(e => e.Comment_Id);
                entity.Property(e => e.Comment_Id).HasDefaultValueSql("(newid())");
                entity.Property(e => e.Comment_Id).ValueGeneratedNever();
            });

            modelBuilder.Entity<PublicationsDto>(entity =>
            {
                entity.ToTable("Publications_T");
                entity.HasKey(e => e.Publication_Id);
                entity.Property(e => e.Publication_Id).HasDefaultValueSql("(newid())");
                entity.Property(e => e.Publication_Id).ValueGeneratedNever();
            });
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}